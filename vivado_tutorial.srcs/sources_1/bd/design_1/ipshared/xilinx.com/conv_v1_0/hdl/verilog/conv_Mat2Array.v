// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_Mat2Array (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_data_stream_V_dout,
        img_data_stream_V_empty_n,
        img_data_stream_V_read,
        m_axi_fb_AWVALID,
        m_axi_fb_AWREADY,
        m_axi_fb_AWADDR,
        m_axi_fb_AWID,
        m_axi_fb_AWLEN,
        m_axi_fb_AWSIZE,
        m_axi_fb_AWBURST,
        m_axi_fb_AWLOCK,
        m_axi_fb_AWCACHE,
        m_axi_fb_AWPROT,
        m_axi_fb_AWQOS,
        m_axi_fb_AWREGION,
        m_axi_fb_AWUSER,
        m_axi_fb_WVALID,
        m_axi_fb_WREADY,
        m_axi_fb_WDATA,
        m_axi_fb_WSTRB,
        m_axi_fb_WLAST,
        m_axi_fb_WID,
        m_axi_fb_WUSER,
        m_axi_fb_ARVALID,
        m_axi_fb_ARREADY,
        m_axi_fb_ARADDR,
        m_axi_fb_ARID,
        m_axi_fb_ARLEN,
        m_axi_fb_ARSIZE,
        m_axi_fb_ARBURST,
        m_axi_fb_ARLOCK,
        m_axi_fb_ARCACHE,
        m_axi_fb_ARPROT,
        m_axi_fb_ARQOS,
        m_axi_fb_ARREGION,
        m_axi_fb_ARUSER,
        m_axi_fb_RVALID,
        m_axi_fb_RREADY,
        m_axi_fb_RDATA,
        m_axi_fb_RLAST,
        m_axi_fb_RID,
        m_axi_fb_RUSER,
        m_axi_fb_RRESP,
        m_axi_fb_BVALID,
        m_axi_fb_BREADY,
        m_axi_fb_BRESP,
        m_axi_fb_BID,
        m_axi_fb_BUSER,
        image_out1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 9'b1;
parameter    ap_ST_st2_fsm_1 = 9'b10;
parameter    ap_ST_st3_fsm_2 = 9'b100;
parameter    ap_ST_pp0_stg0_fsm_3 = 9'b1000;
parameter    ap_ST_st7_fsm_4 = 9'b10000;
parameter    ap_ST_st8_fsm_5 = 9'b100000;
parameter    ap_ST_st9_fsm_6 = 9'b1000000;
parameter    ap_ST_st10_fsm_7 = 9'b10000000;
parameter    ap_ST_st11_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_780 = 32'b11110000000;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv11_780 = 11'b11110000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] img_data_stream_V_dout;
input   img_data_stream_V_empty_n;
output   img_data_stream_V_read;
output   m_axi_fb_AWVALID;
input   m_axi_fb_AWREADY;
output  [31:0] m_axi_fb_AWADDR;
output  [0:0] m_axi_fb_AWID;
output  [31:0] m_axi_fb_AWLEN;
output  [2:0] m_axi_fb_AWSIZE;
output  [1:0] m_axi_fb_AWBURST;
output  [1:0] m_axi_fb_AWLOCK;
output  [3:0] m_axi_fb_AWCACHE;
output  [2:0] m_axi_fb_AWPROT;
output  [3:0] m_axi_fb_AWQOS;
output  [3:0] m_axi_fb_AWREGION;
output  [0:0] m_axi_fb_AWUSER;
output   m_axi_fb_WVALID;
input   m_axi_fb_WREADY;
output  [7:0] m_axi_fb_WDATA;
output  [0:0] m_axi_fb_WSTRB;
output   m_axi_fb_WLAST;
output  [0:0] m_axi_fb_WID;
output  [0:0] m_axi_fb_WUSER;
output   m_axi_fb_ARVALID;
input   m_axi_fb_ARREADY;
output  [31:0] m_axi_fb_ARADDR;
output  [0:0] m_axi_fb_ARID;
output  [31:0] m_axi_fb_ARLEN;
output  [2:0] m_axi_fb_ARSIZE;
output  [1:0] m_axi_fb_ARBURST;
output  [1:0] m_axi_fb_ARLOCK;
output  [3:0] m_axi_fb_ARCACHE;
output  [2:0] m_axi_fb_ARPROT;
output  [3:0] m_axi_fb_ARQOS;
output  [3:0] m_axi_fb_ARREGION;
output  [0:0] m_axi_fb_ARUSER;
input   m_axi_fb_RVALID;
output   m_axi_fb_RREADY;
input  [7:0] m_axi_fb_RDATA;
input   m_axi_fb_RLAST;
input  [0:0] m_axi_fb_RID;
input  [0:0] m_axi_fb_RUSER;
input  [1:0] m_axi_fb_RRESP;
input   m_axi_fb_BVALID;
output   m_axi_fb_BREADY;
input  [1:0] m_axi_fb_BRESP;
input  [0:0] m_axi_fb_BID;
input  [0:0] m_axi_fb_BUSER;
input  [31:0] image_out1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_data_stream_V_read;
reg m_axi_fb_AWVALID;
reg m_axi_fb_WVALID;
reg m_axi_fb_BREADY;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm = 9'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_27;
reg   [10:0] p_1_reg_110;
wire  signed [45:0] sext_cast_fu_121_p1;
reg  signed [45:0] sext_cast_reg_202;
wire   [10:0] row_V_fu_131_p2;
reg   [10:0] row_V_reg_210;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_106;
reg   [31:0] fb_addr_reg_215;
wire   [0:0] exitcond1_fu_125_p2;
wire   [0:0] exitcond_fu_190_p2;
reg   [0:0] exitcond_reg_220;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_3;
reg    ap_sig_bdd_120;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_127;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_220_pp0_it1;
reg    ap_sig_ioackin_m_axi_fb_WREADY;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire   [10:0] col_V_fu_196_p2;
reg   [7:0] tmp_7_reg_229;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_155;
reg    ap_sig_ioackin_m_axi_fb_AWREADY;
reg   [10:0] p_s_reg_99;
reg    ap_sig_cseq_ST_st11_fsm_8;
reg    ap_sig_bdd_174;
wire  signed [63:0] tmp_5_fu_180_p1;
reg    ap_reg_ioackin_m_axi_fb_AWREADY = 1'b0;
reg    ap_reg_ioackin_m_axi_fb_WREADY = 1'b0;
wire   [21:0] p_shl_fu_137_p3;
wire   [17:0] p_shl2_fu_149_p3;
wire   [22:0] p_shl_cast_fu_145_p1;
wire   [22:0] p_shl2_cast_fu_157_p1;
wire   [22:0] r_V_fu_161_p2;
wire  signed [43:0] r_V_cast_fu_167_p1;
wire   [45:0] tmp_1_fu_171_p1;
wire   [45:0] tmp_4_fu_175_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_sig_bdd_292;
reg    ap_sig_bdd_291;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_m_axi_fb_AWREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_fb_AWREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_AWREADY)) begin
                ap_reg_ioackin_m_axi_fb_AWREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == m_axi_fb_AWREADY)) begin
                ap_reg_ioackin_m_axi_fb_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_m_axi_fb_WREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_fb_WREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_291) begin
            if (~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) begin
                ap_reg_ioackin_m_axi_fb_WREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_292) begin
                ap_reg_ioackin_m_axi_fb_WREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond_fu_190_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_AWREADY))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond_fu_190_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_AWREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond_fu_190_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_AWREADY))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond_fu_190_p2))) begin
        p_1_reg_110 <= col_V_fu_196_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_AWREADY))) begin
        p_1_reg_110 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_8) & ~(m_axi_fb_BVALID == ap_const_logic_0))) begin
        p_s_reg_99 <= row_V_reg_210;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        p_s_reg_99 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond_reg_220_pp0_it1 <= exitcond_reg_220;
        exitcond_reg_220 <= exitcond_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_125_p2))) begin
        fb_addr_reg_215 <= tmp_5_fu_180_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        row_V_reg_210 <= row_V_fu_131_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        sext_cast_reg_202 <= sext_cast_fu_121_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_lv1_0 == exitcond_reg_220) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_7_reg_229 <= img_data_stream_V_dout;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_125_p2) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_125_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_125_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_125_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_120) begin
    if (ap_sig_bdd_120) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_174) begin
    if (ap_sig_bdd_174) begin
        ap_sig_cseq_ST_st11_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_27) begin
    if (ap_sig_bdd_27) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_106) begin
    if (ap_sig_bdd_106) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_155) begin
    if (ap_sig_bdd_155) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (m_axi_fb_AWREADY or ap_reg_ioackin_m_axi_fb_AWREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_axi_fb_AWREADY)) begin
        ap_sig_ioackin_m_axi_fb_AWREADY = m_axi_fb_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_fb_AWREADY = ap_const_logic_1;
    end
end

always @ (m_axi_fb_WREADY or ap_reg_ioackin_m_axi_fb_WREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_axi_fb_WREADY)) begin
        ap_sig_ioackin_m_axi_fb_WREADY = m_axi_fb_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_fb_WREADY = ap_const_logic_1;
    end
end

always @ (exitcond_reg_220 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_sig_bdd_127 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_220_pp0_it1 or ap_sig_ioackin_m_axi_fb_WREADY or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_lv1_0 == exitcond_reg_220) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        img_data_stream_V_read = ap_const_logic_1;
    end else begin
        img_data_stream_V_read = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_reg_ioackin_m_axi_fb_AWREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_logic_0 == ap_reg_ioackin_m_axi_fb_AWREADY))) begin
        m_axi_fb_AWVALID = ap_const_logic_1;
    end else begin
        m_axi_fb_AWVALID = ap_const_logic_0;
    end
end

always @ (m_axi_fb_BVALID or ap_sig_cseq_ST_st11_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_8) & ~(m_axi_fb_BVALID == ap_const_logic_0))) begin
        m_axi_fb_BREADY = ap_const_logic_1;
    end else begin
        m_axi_fb_BREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_127 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_220_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ioackin_m_axi_fb_WREADY) begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_logic_0 == ap_reg_ioackin_m_axi_fb_WREADY))) begin
        m_axi_fb_WVALID = ap_const_logic_1;
    end else begin
        m_axi_fb_WVALID = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or m_axi_fb_BVALID or exitcond1_fu_125_p2 or exitcond_fu_190_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_127 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_220_pp0_it1 or ap_sig_ioackin_m_axi_fb_WREADY or ap_reg_ppiten_pp0_it2 or ap_sig_ioackin_m_axi_fb_AWREADY) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_125_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_AWREADY)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_3 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond_fu_190_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_m_axi_fb_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond_fu_190_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st7_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end
        end
        ap_ST_st7_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_5;
        end
        ap_ST_st8_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_6;
        end
        ap_ST_st9_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_7;
        end
        ap_ST_st10_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_8;
        end
        ap_ST_st11_fsm_8 : 
        begin
            if (~(m_axi_fb_BVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_8;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_106 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_120 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (img_data_stream_V_empty_n or exitcond_reg_220) begin
    ap_sig_bdd_127 = ((img_data_stream_V_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond_reg_220));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_155 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_174 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_27 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_reg_ppstg_exitcond_reg_220_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    ap_sig_bdd_291 = ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_220_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2));
end


always @ (m_axi_fb_WREADY or ap_sig_bdd_127 or ap_reg_ppiten_pp0_it1) begin
    ap_sig_bdd_292 = ((ap_const_logic_1 == m_axi_fb_WREADY) & ~(ap_sig_bdd_127 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)));
end

assign col_V_fu_196_p2 = (p_1_reg_110 + ap_const_lv11_1);

assign exitcond1_fu_125_p2 = (p_s_reg_99 == ap_const_lv11_438? 1'b1: 1'b0);

assign exitcond_fu_190_p2 = (p_1_reg_110 == ap_const_lv11_780? 1'b1: 1'b0);

assign m_axi_fb_ARADDR = ap_const_lv32_0;

assign m_axi_fb_ARBURST = ap_const_lv2_0;

assign m_axi_fb_ARCACHE = ap_const_lv4_0;

assign m_axi_fb_ARID = ap_const_lv1_0;

assign m_axi_fb_ARLEN = ap_const_lv32_0;

assign m_axi_fb_ARLOCK = ap_const_lv2_0;

assign m_axi_fb_ARPROT = ap_const_lv3_0;

assign m_axi_fb_ARQOS = ap_const_lv4_0;

assign m_axi_fb_ARREGION = ap_const_lv4_0;

assign m_axi_fb_ARSIZE = ap_const_lv3_0;

assign m_axi_fb_ARUSER = ap_const_lv1_0;

assign m_axi_fb_ARVALID = ap_const_logic_0;

assign m_axi_fb_AWADDR = fb_addr_reg_215;

assign m_axi_fb_AWBURST = ap_const_lv2_0;

assign m_axi_fb_AWCACHE = ap_const_lv4_0;

assign m_axi_fb_AWID = ap_const_lv1_0;

assign m_axi_fb_AWLEN = ap_const_lv32_780;

assign m_axi_fb_AWLOCK = ap_const_lv2_0;

assign m_axi_fb_AWPROT = ap_const_lv3_0;

assign m_axi_fb_AWQOS = ap_const_lv4_0;

assign m_axi_fb_AWREGION = ap_const_lv4_0;

assign m_axi_fb_AWSIZE = ap_const_lv3_0;

assign m_axi_fb_AWUSER = ap_const_lv1_0;

assign m_axi_fb_RREADY = ap_const_logic_0;

assign m_axi_fb_WDATA = tmp_7_reg_229;

assign m_axi_fb_WID = ap_const_lv1_0;

assign m_axi_fb_WLAST = ap_const_logic_0;

assign m_axi_fb_WSTRB = ap_const_lv1_1;

assign m_axi_fb_WUSER = ap_const_lv1_0;

assign p_shl2_cast_fu_157_p1 = p_shl2_fu_149_p3;

assign p_shl2_fu_149_p3 = {{p_s_reg_99}, {ap_const_lv7_0}};

assign p_shl_cast_fu_145_p1 = p_shl_fu_137_p3;

assign p_shl_fu_137_p3 = {{p_s_reg_99}, {ap_const_lv11_0}};

assign r_V_cast_fu_167_p1 = $signed(r_V_fu_161_p2);

assign r_V_fu_161_p2 = (p_shl_cast_fu_145_p1 - p_shl2_cast_fu_157_p1);

assign row_V_fu_131_p2 = (p_s_reg_99 + ap_const_lv11_1);

assign sext_cast_fu_121_p1 = $signed(image_out1);

assign tmp_1_fu_171_p1 = $unsigned(r_V_cast_fu_167_p1);

assign tmp_4_fu_175_p2 = ($signed(sext_cast_reg_202) + $signed(tmp_1_fu_171_p1));

assign tmp_5_fu_180_p1 = $signed(tmp_4_fu_175_p2);


endmodule //conv_Mat2Array

